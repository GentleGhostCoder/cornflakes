[tool.poetry]
name = "cornflakes"
version = "3.3.6"  # <<COOKIETEMPLE_FORCE_BUMP>>
description = "Create generic any easy way to manage Configs for your project"
authors = ["Semjon Geist <semjon.geist@ionos.com>"]
license = "Apache2.0"
readme = "README.rst"
homepage = "https://github.com/sgeist/cornflakes"
repository = "https://github.com/sgeist/cornflakes"
documentation = "https://cornflakes.readthedocs.io"
packages = [
    { include = "cornflakes"}
]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
include = [ # include cpp sources for not compiled dist
    { path = "inst/ext", format = "sdist" },
    { path = "inst/_cornflakes", format = "sdist" }
]
exclude = [
    { path = "cornflakes/__pycache__" }
]

[tool.poetry.dependencies]
python = "^3.8.1"
PyYAML = "^5.4.1"
rich-rst = "^1.1.7"
click = "^8.1.3"
rich = ">=12.6,<14.0"
types-pyyaml = "^6.0.12.1"
validators = "^0.20.0"

[tool.poetry.dev-dependencies]
autoflake = "^2.0.2"
pytest = ">= 7.3.1"
coverage = {extras = ["toml"], version = ">=5.3"}
safety = ">=1.9.0"
typeguard = ">=2.12.0"
xdoctest = {extras = ["colors"], version = ">=0.15.0"}
sphinx = ">=4.0.2"
sphinx-autobuild = ">=2021.3.14"
pre-commit = ">=2.11.1"
flake8 = ">=3.8.4"
black = ">=20.8b1"
flake8-bandit = ">=2.1.2"
flake8-bugbear = ">=21.4.3"
flake8-docstrings = ">=1.5.0"
flake8-rst-docstrings = ">=0.2.3"
pep8-naming = ">=0.11.1"
darglint = ">=1.5.8"
pre-commit-hooks = ">=4.0.1"
sphinx-rtd-theme = ">=1.2.0"
sphinx-click = ">=4.4.0"
Pygments = ">=2.8.1"
types-pkg-resources = ">=0.1.2"
types-requests = ">=2.25.2"
types-attrs = ">=19.1.0"
sphinx-rtd-dark-mode = ">=1.2.4"
sphinx-automodapi = ">=0.15.0"
Jinja2 = ">=3.0.1"
mypy = ">=0.910"
pyupgrade = ">=2.31.0"
myst_parser = ">=1.0.0"
breathe = ">=4.35.0"
Cython  = ">=0.29.32"
mock = ">=4.0.3"
docutils = ">=0.17.1"
setuptools = "^67.7.2"
ninja = ">=1.10.2.4"
nox = "^2023.4.22"
nox-poetry = "^1.0.1"
compiledb = "^0.10.1"
isort = "^5.12.0"
virtualenv = "^20.23.0"
pybind11 = "^2.10.4"
pydantic = {extras = ["dotenv"], version = "^1.10.7"}
markdown-it-py = "^2.2.0"

[tool.poetry.scripts]
cornflakes = "cornflakes.__main__:main"

[[tool.poetry.source]]
name = "cornflakes"
url = "https://pypi.org/"
priority = "primary"


[[tool.poetry.source]]
name = "PyPI"
priority = "primary"

[tool.black]
line-length = 120
skip-string-normalization = false

[tool.ruff]
ignore = ["E501","D100","N813"]
line-length = 120
exclude =[".git","__pycache__","docs/source/conf.py,build*","dist/*",".venv","ext/*","setup*","tests/*","cmake-build-debug*"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.flake8]
select = ["B","B9","C","D","DAR","E","F","N","RST","B","W"]
ignore = ["E203","E501","RST201","RST203","RST301","W503","D100","N813","RST304","WPS412"]
max-line-length = 120
max-complexity = 10
docstring-convention = "google"
per-file-ignores = ["tests/*:S101"]
exclude =[".git","__pycache__","docs/source/conf.py,build*","dist/*",".venv","ext/*","setup*","tests/*","cmake-build-debug*"]
strictness="long"
docstring_style="sphinx"

[tool.mypy]
strict = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[pytype]
inputs = "cornflakes"

[tool.isort]
skip = ["__init__.py", "_enforce_types.py"] # isort different behaviour on ci
force_sort_within_sections=true
multi_line_output=3
include_trailing_comma=true
balanced_wrapping=true
line_length=120
profile = "black"

[tool.coverage.paths]
source = ["cornflakes", "*/site-packages"]

[tool.coverage.run]
branch = true
source = ["cornflakes"]

[tool.coverage.report]
show_missing = true

[tool.poetry.build]
script = "build.py"
generate-setup-file = true

[build-system]
requires = [
    "poetry-core>=1.0.0",
    "wheel",
    "ninja",
    "cmake>=3.12",
    "docutils",
    "pybind11",
    "setuptools"
#    "fastentrypoints"
]
#build-backend = "setuptools.build_meta"
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
pythonpath = ["src"]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = ["error"]
testpaths = ["tests"]

[tool.cibuildwheel]
test-command = "pytest {project}/tests"
before-build = "rm -rf {project}/build"
after-build = "rm -rf {project}/build"
